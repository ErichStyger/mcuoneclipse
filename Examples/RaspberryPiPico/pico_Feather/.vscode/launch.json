{
    "version": "0.2.0",
    "configurations": [
        { // see https://github.com/Marus/cortex-debug/blob/master/debug_attributes.md
            "name": "AEMBS_pico_Game core0 J-Link",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "jlink",
            "serverpath": "${env:PICO_JLINK_PATH}/JLinkGDBServerCL",
            "cwd": "${workspaceRoot}",
            "executable": "${command:cmake.launchTargetPath}",
            "armToolchainPath": "${env:PICO_TOOLCHAIN_PATH}",  // needed for the gdb
            "device": "RP2040_M0_0",
            "interface": "swd",
            "runToEntryPoint": "main", // "_reset_handler" or for example "main"
            "postLaunchCommands": [
                "monitor semihosting enable",
                "monitor semihosting ioclient 1", // 1: telnet (port 2333); 2: gdb; 3: both telnet and gdbclient output
            ],
            "rtos": "FreeRTOS",
            "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
            "rttConfig": {
                "enabled": false,
                "address": "auto",
                "decoders": [
                    {
                        "label": "",
                        "port": 0,
                        "type": "console"
                    }
                ]
            },
            "showDevDebugOutput": "none",
            // Multicore
            // Following two are needed for cases where gdb-server is shared. Like OpenOCD and PyOCD.
            // Not for JLink and STLink where the sharing happens at the LINK level and not at the server level
            //"numberOfProcessors": 2,
            //"targetProcessor": 1,
            "chainedConfigurations": {
                "enabled": false,
                "waitOnEvent": "postInit",
                "detached": true,                         // Set this to true for JLink/STLink, false for most other type servers
                "lifecycleManagedByParent": true,
                "launches": [                              // Array of launches. Order is respected
                    {
                        "name": "Core_1 JLink",     // Name of another configuration
                        "folder": "${workspaceRoot}"
                    }
               ]
            },
        },
        {
        "name": "Core1 JLink",
        "type": "cortex-debug",
        "request": "attach",
        "servertype": "jlink",
        "serverpath": "${env:PICO_JLINK_PATH}/JLinkGDBServerCL", // or: set in global json: cortex-debug.JLinkGDBServerPath
        "cwd": "${workspaceRoot}",
        "executable": "${command:cmake.launchTargetPath}",
        "armToolchainPath": "${env:PICO_TOOLCHAIN_PATH}",  // needed for the gdb
        "device": "RP2040_M0_1",
        "interface": "swd",
        "rtos": "FreeRTOS",
    },

    {
        "name": "AEMBS_pico_Game CMSIS-DAP core0 Cortex-Debug",
        "type": "cortex-debug",
        "request": "launch",
        "servertype": "openocd",
        "serverpath": "${env:OPENOCD_PATH}/openocd",
        "serverArgs": [
            "-c adapter speed 5000",
            "-c set USE_CORE 0", // TIMER stops, see https://github.com/raspberrypi/picoprobe/issues/45
        ],
        "cwd": "${workspaceRoot}",
        "executable": "${command:cmake.launchTargetPath}",
        "armToolchainPath": "${env:PICO_TOOLCHAIN_PATH}",  // needed for the gdb
        "device": "RP2040",
        "configFiles": [
            "interface/cmsis-dap.cfg",
            "target/rp2040.cfg"
        ],
        "runToEntryPoint": "main", // "_reset_handler" or for example "main"
        "rtos": "FreeRTOS",
        // Multicore
        // Following two are needed for cases where gdb-server is shared. Like OpenOCD and PyOCD.
        // Not for JLink and STLink where the sharing happens at the LINK level and not at the server level
        "numberOfProcessors": 2,
        "targetProcessor": 0,
        
        "chainedConfigurations": {
            "enabled": false,
            "waitOnEvent": "postInit",
            "detached": false,  // Set this to true for JLink, false for most other type servers
            "lifecycleManagedByParent": true,
            "launches": [ // Array of launches. Order is respected
                {
                    "name": "Core_1 OpenOCD",  // Name of another configuration
                    "folder": "${workspaceRoot}"
                }
            ]
        },
    },
    {
        "name": "Core_1 OpenOCD",
        "type": "cortex-debug",
        "request": "attach",
        "servertype": "openocd",
        "serverpath": "${env:OPENOCD_PATH}/openocd",
        "executable": "${command:cmake.launchTargetPath}",
        "device": "RP2040",
        "rtos": "FreeRTOS",
        "targetProcessor": 1,
    },
  ]
}