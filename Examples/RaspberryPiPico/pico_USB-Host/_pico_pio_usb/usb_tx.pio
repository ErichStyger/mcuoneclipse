; Copyright (c) 2021-2024 sekigon-gonnoc

.define public IRQ_TX_EOP 0   ; EOP start flag bit

; USB NRZI transmitter
; Run at 48 MHz for full-spped (x4)
; Run at 6 MHz for low-spped (x4)
; autopull enabled
; Should be placed at address 0
.program usb_tx_dpdm
.side_set 2

; J for fs, K for ls
.define FJ_LK 0b01
; K for fs, J for ls
.define FK_LJ 0b10
.define SE0 0b00

irq IRQ_TX_EOP      side SE0 [7]
reset:
.wrap_target
out pc, 2           side FJ_LK [3]
set pindirs, 0b00   side FJ_LK [3]
out pc, 2           side FK_LJ [3]
start:
set pindirs, 0b11   side FJ_LK
.wrap

; USB transmitter for PRE packet (No EOP)
; Run at 48 MHz for full-spped
; autopull enabled
.program usb_tx_pre_dpdm
.side_set 2

; J for fs, K for ls
.define FJ_LK 0b01
; K for fs, J for ls
.define FK_LJ 0b10
.define SE0 0b00

irq IRQ_TX_EOP      side FJ_LK [7]
reset:
.wrap_target
out pc, 2           side FJ_LK [3]
set pindirs, 0b00   side FJ_LK [3]
out pc, 2           side FK_LJ [3]
start:
set pindirs, 0b11   side FJ_LK
.wrap

; USB NRZI transmitter
; Run at 48 MHz for full-spped
; Run at 6 MHz for low-spped
; autopull enabled
.program usb_tx_dmdp
.side_set 2

.define FK_LJ 0b01
.define FJ_LK 0b10
.define SE0 0b00

irq IRQ_TX_EOP      side SE0 [7]
reset:
.wrap_target
out pc, 2           side FJ_LK [3]
set pindirs, 0b00   side FJ_LK [3]
out pc, 2           side FK_LJ [3]
start:
set pindirs, 0b11   side FJ_LK
.wrap

; USB transmitter for PRE packet (No EOP)
; Run at 48 MHz for full-spped
; autopull enabled
.program usb_tx_pre_dmdp
.side_set 2

.define FK_LJ 0b01
.define FJ_LK 0b10
.define SE0 0b00

irq IRQ_TX_EOP      side FJ_LK [7]
reset:
.wrap_target
out pc, 2           side FJ_LK [3]
set pindirs, 0b00   side FJ_LK [3]
out pc, 2           side FK_LJ [3]
start:
set pindirs, 0b11   side FJ_LK
.wrap

% c-sdk {
#include "hardware/clocks.h"

  static void __no_inline_not_in_flash_func(usb_tx_configure_pins)(PIO pio, uint sm, uint pin_dp, uint pin_dm) {
    if (pin_dp < pin_dm) {
      pio_sm_set_out_pins(pio, sm, pin_dp, 2);
      pio_sm_set_set_pins(pio, sm, pin_dp, 2);
      pio_sm_set_sideset_pins(pio, sm, pin_dp);
    } else {
      pio_sm_set_out_pins(pio, sm, pin_dm, 2);
      pio_sm_set_set_pins(pio, sm, pin_dm, 2);
      pio_sm_set_sideset_pins(pio, sm, pin_dm);
    }
  }

  static inline void usb_tx_fs_program_init(PIO pio, uint sm, uint offset,
                                         uint pin_dp, uint pin_dm) {
    pio_sm_set_pins_with_mask(pio, sm, (1 << pin_dp), ((1 << pin_dp) | (1 << pin_dm)));

    gpio_pull_down(pin_dp);
    gpio_pull_down(pin_dm);
    pio_gpio_init(pio, pin_dp);
    pio_gpio_init(pio, pin_dm);

    pio_sm_config c = usb_tx_dpdm_program_get_default_config(offset);

    // shifts to left, autopull, 8bit
    sm_config_set_out_shift(&c, false, true, 8);

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    // run at 48MHz
    // clk_sys should be multiply of 12MHz
    float div = (float)clock_get_hz(clk_sys) / (48000000UL);
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset + 1, &c);
    usb_tx_configure_pins(pio, sm, pin_dp, pin_dm);
    pio_sm_set_enabled(pio, sm, true);
  }

  static inline void usb_tx_ls_program_init(PIO pio, uint sm, uint offset,
                                         uint pin_dp, uint pin_dm) {
    pio_sm_set_pins_with_mask(pio, sm, (1 << pin_dm), ((1 << pin_dp) | (1 << pin_dm)));

    gpio_pull_down(pin_dp);
    gpio_pull_down(pin_dm);
    pio_gpio_init(pio, pin_dp);
    pio_gpio_init(pio, pin_dm);

    pio_sm_config c = usb_tx_dmdp_program_get_default_config(offset);

    // shifts to left, autopull, 8bit
    sm_config_set_out_shift(&c, false, true, 8);

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    // run at 6MHz
    // clk_sys should be multiply of 12MHz
    float div = (float)clock_get_hz(clk_sys) / (6000000UL);
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset + 1, &c);
    usb_tx_configure_pins(pio, sm, pin_dp, pin_dm);
    pio_sm_set_enabled(pio, sm, true);
  }

%}